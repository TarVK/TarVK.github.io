{"pageProps":{"url":"https://tarvk.github.io/projects/launchmenu","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(PageSummary, {\n    title: \"LaunchMenu\",\n    content: mdx(\"img\", {\n      src: \"~/preview.png\"\n    }),\n    tags: [\"launch\", \"menu\"],\n    featuredIndex: 0,\n    mdxType: \"PageSummary\"\n  }, mdx(\"p\", null, \"LaunchMenu is the largest project I've worked on so far, and has a couple of interesting features I am very proud of.\")), mdx(\"section\", {\n    \"name\": \"LaunchMenu\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"LaunchMenu\"), mdx(YTPlayer, {\n    video: \"_3A9OwoSsaI\",\n    aspectRatio: \"auto\",\n    mdxType: \"YTPlayer\"\n  }), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"LaunchMenu is a quick utility applet platform inspired by Mac's Spotlight. It is\\nfully controllable from keyboard, features advanced interactive menus, and allows\\nfor multiple item selection and manipulation. More information about the program\\ncan be found on its dedicated website: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://launchmenu.github.io\"\n  }, \"launchmenu.github.io\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"As you might be able to tell, I used LaunchMenu's website as a foundation for this site.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"History\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"History\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Back in 2017 a friend of mine, Sancarn, was working on making a Spotlight-like application for custom actions. It seemed like an interesting idea and I had some tips to improve his initial concept. We ended up making a new slightly better version together. Since I was (and still am) constantly learning new things regarding software development, we ended up making multiple different versions, each one slightly better than then last. In mid 2020 we started work on the version that can currently be downloaded. A more in depth overview of LaunchMenu's history can be found on its website: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://launchmenu.github.io/about/#history\"\n  }, \"launchmenu.github.io/about/#history\"), \".\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Interesting systems\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Interesting systems\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In order to support all the features we planned for LaunchMenu I had to come up with several systems and architectures. Some of these systems turned out to not quite hit the mark, but below are several systems that did end up working out.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Action system\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Action system\"), mdx(ImageGrid, {\n    images: [\"~/multiselect.png\", \"~/multiselectContextMenu.png\"],\n    mdxType: \"ImageGrid\"\n  }), \"The action system is what allows users to select and interact with multiple items at once in LaunchMenu, primarily through the context menu. The difficulty in developing such a system is that the main search menu will show all sorts of items from unknown sources (third party applets). So the menu can't be responsible for providing all the actions for the context menu, instead the items themselves have to do this. Of course every item could provide a list of context menu actions that the user can select to execute, but this by itself would simply result in a context menu with separate (duplicate) items that when executed only apply to one of the items in the selection. You could label actions such that you only show one context menu item but run all callback functions when it is executed, but this still wouldn't be sufficient for all actions. Consider for example a copy action, copying multiple items in sequence will not result in all items being in the clipboard at once. So making a proper system that can handle all these cases is actually quite a challenge.\", mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The resulting system that we came up with is somewhat difficult to grasp but has been thoroughly documented on LaunchMenu's site: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://launchmenu.github.io/docs/concepts/interaction/actions\"\n  }, \"launchmenu.github.io/docs/concepts/interaction/actions\"), \".\\nThe idea is essentially to create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"actions\"), \" which specify behavior, while making items define \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action bindings\"), \" which associate data to these actions. An action can then be applied to a list of items (which may or may not contain bindings for that action). The actions themselves will define how to process the given bindings into a final result. Below is a very basic example showing off this concept:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=actionBindingBasics.ts\",\n    \"title\": \"actionBindingBasics.ts\"\n  }, \"const list = createAction({\\n    name: \\\"list\\\",\\n    core: (items: string[]) => {\\n        const itemsString = items.join(\\\", \\\");\\n        return {result: itemsString};\\n    },\\n});\\n\\nconst item1 = {actionBindings: [list.createBinding(\\\"item1\\\")]};\\nconst item2 = {actionBindings: [list.createBinding(\\\"item2\\\")]};\\nconst item3 = {actionBindings: [list.createBinding(\\\"item3\\\")]};\\nlist.get([item1, item2, item3]); // == \\\"item1, item2, item3\\\"\\n\\nconst item4 = {\\n    actionBindings: [list.createBinding(\\\"item2\\\"), list.createBinding(\\\"item1\\\")],\\n};\\nconst item5 = {actionBindings: []};\\nconst item6 = {actionBindings: [list.createBinding(\\\"item3\\\")]};\\nlist.get([item4, item5, item6]); // == \\\"item2, item1, item3\\\"\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This by itself already allows us to handle some more complicated commands such as copying multiple items at once, but it's still somewhat limiting. The main power of this system comes from the ability of defining a hierarchy in actions. One action \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \" can indicate another action \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Y\"), \" to be its parent in order to make bindings for that parent. Then if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Y\"), \" is executed on an item with a binding for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \", this will be forwarded to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Y\"), \". This sounds a bit abstract, so below is a simple example building off of the previous to demonstrate this:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=actionBindingsHierarchy.ts\",\n    \"title\": \"actionBindingsHierarchy.ts\"\n  }, \"const subList = createAction({\\n    name: \\\"subList\\\",\\n    parents: [list],\\n    core: (items: string[]) => {\\n        const itemsString = items.join(\\\", \\\");\\n        return {\\n            children: [list.createBinding(`(${itemsString})`)],\\n        };\\n    },\\n});\\n\\nconst item1 = {actionBindings: [list.createBinding(\\\"item1\\\")]};\\nconst item2 = {actionBindings: [subList.createBinding(\\\"item2\\\")]};\\nconst item3 = {actionBindings: [subList.createBinding(\\\"item3\\\")]};\\nlist.get([item1, item2, item3]); // == \\\"item1, (item2, item3)\\\"\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We use this system in multiple ways in LaunchMenu, but most notably to define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contextMenuAction\"), \". This action is what menus use to retrieve all the items to show in the context menu for a given selection. So each \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action\"), \" that is defined can simply indicate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contextMenuAction\"), \" to be their parent and create a binding (specifying a menu item) that should show in the context menu. So a simplified mockup of this system may look as follows:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=contextMenuAction.tsx\",\n    \"title\": \"contextMenuAction.tsx\"\n  }, \"const contextMenuAction = createAction({\\n    name: \\\"contextMenu\\\",\\n    core: (items: JSX.Element[])=>items\\n});\\n\\nconst copyAction = createAction({\\n    name: \\\"copy\\\",\\n    parents: [contextMenuAction]\\n    core: (text: string[])=>{\\n        const combinedText = text.join(\\\"\\\\n\\\");\\n        return { children: [contextMenuAction.createBinding(\\n            <MenuItem onClick={()=>copy(combinedText)}>Copy</MenuItem>\\n        )] };\\n    }\\n});\\n\\nconst item1 = {actionBindings: [copyAction.createBinding(\\\"item1\\\")]};\\nconst item2 = {actionBindings: [copyAction.createBinding(\\\"item2\\\")]};\\nconst menu = contextMenuAction.get([item1, item2]); // Will result in a list with 1 JSX element\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"So this system is what allows LaunchMenu to have very powerful yet flexible context menus. Any third party applet is able to create 'child actions' for the `contextMenuAction`` and thus extend what can be shown in the context menu. I have seen other context menu systems use approaches based on string labels in the past, and this results in implicit dependencies that make the code very hard to navigate. This system however has explicit dependencies in the code making things easy to trace, and even provides great intellisense/type-safety.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"I am planning on releasing an implementation of this system as an independent package at some point, but I am currently still trying to figure out some improvements. That project can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/TarVK/Hiery\"\n  }, \"github.com/TarVK/Hiery\"))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Subscribable state\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Subscribable state\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Throughout all of LaunchMenu we've made use of my library \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tarvk.github.io/model-react/examples/build/\"\n  }, \"Model-react\"), \". This library wasn't made specifically for LaunchMenu, but LaunchMenu wouldn't function without it. This is what allows us to keep LaunchMenu very flexible, yet keep the entire state and UI synchronized.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"At some point I will link to an independent page on Model-react, but I have not yet created said page.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The main idea behind model-react is to make it as easy as possible to listen to changes of a value. It's in essence a form of dependency inversion. If I have some property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prop\"), \" which I use in multiple places of my application - let's say place \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Y\"), \", I would prefer to not have to also explicitly call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Y\"), \" when updating \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prop\"), \". Because Within code, that approach would result in cyclic dependencies and maintenance nightmares since \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Y\"), \" depend on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prop\"), \", but \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prop\"), \" depends on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Y\"), \" because it would have to call some code there to forward the changes. Moreover that approach would not allow third party applets to be informed of state changes at all.\\nA common pattern to deal with this is the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Observer_pattern#:~:text=The%20observer%20pattern%20is%20a,calling%20one%20of%20their%20methods.\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Observer\"), \" design pattern\"), \":\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"~/observer.svg\",\n    \"alt\": \"Observer\"\n  })), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The problem with this design pattern is that it requires a lot of verbose and boilerplate-like code to register and deregister observers. Model-react changes this by essentially making you pass a \\\"hook\\\" when calling a getter for your data, which encapsulates all that is of importance to subscribe to the data. \\\"Data sources\\\" such as a simple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Field\"), \" can then be used to create a source of data that can deal with these hooks. There are also a couple of different ways of creating hooks, most notably using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Observer\"), \" class that transforms this whole system back to a simple callback when the property changes and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useDataHook\"), \" which allows react components to rerender when data changes.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is a simple example/demo which highlights how Model-react hides almost all of the boilerplate that usually comes with using the Observer design pattern.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=modelReact.tsx\",\n    \"title\": \"modelReact.tsx\"\n  }, \"import {Field, useDataHook, IDataHook} from \\\"model-react\\\";\\nimport React, {FC} from \\\"react\\\";\\n\\nclass Person {\\n    protected name = new Field(\\\"\\\");\\n    protected age = new Field(0);\\n    public constructor(name: string, age: number) {\\n        this.name.set(name);\\n        this.age.set(age);\\n    }\\n    public setName(name: string): void {\\n        this.name.set(name);\\n    }\\n    public getName(h?: IDataHook): string {\\n        return this.name.get(h);\\n    }\\n    public setAge(age: number): void {\\n        this.age.set(age);\\n    }\\n    public getAge(h?: IDataHook): number {\\n        return this.age.get(h);\\n    }\\n}\\n\\nconst PersonEditor: FC<{person: Person}> = ({person}) => {\\n    const [h] = useDataHook();\\n    return (\\n        <div>\\n            <input\\n                value={person.getName(h)}\\n                onChange={e => person.setName(e.target.value)}\\n            />\\n            <input\\n                type=\\\"number\\\"\\n                value={person.getAge(h)}\\n                onChange={e => person.setAge(Number(e.target.value))}\\n            />\\n        </div>\\n    );\\n};\\n\\nconst PersonProfile: FC<{person: Person}> = ({person}) => {\\n    const [h] = useDataHook();\\n    return (\\n        <div>\\n            Name: {person.getName(h)} <br />\\n            Age: {person.getAge(h)}\\n        </div>\\n    );\\n};\\n\\nconst john = new Person(\\\"John\\\", 1);\\nexport default (\\n    <div>\\n        <PersonEditor person={john} />\\n        <PersonProfile person={john} />\\n    </div>\\n);\\n\")), mdx(LaunchMenuModelReactDemo, {\n    mdxType: \"LaunchMenuModelReactDemo\"\n  }), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Model-react also has some other note-worthy benefits compared to the direct Observer pattern:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Everything concerning subscripting to data can be ignored if you only need it once\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hooks can collect errors in data sources in order to not disrupt the normal flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data sources can indicate to hook that data is still processed which is useful for loading indicators\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's easier to not group updates of independent data together which results in fewer redundant updates\"))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Fuzzy search\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Fuzzy search\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"~/banner.png\",\n    \"alt\": \"Fuzzy search\"\n  })), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We've created a custom search system for LaunchMenu. This system is based on the idea that searches are often recursive, especially in LaunchMenu. This is because menus can have many layers of nested sub-menus. We wanted this system to make use of the subscribable data such that search results can dynamically update. This is for instance useful when an applet \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \" has to fetch data for its results, as it allows us to already show results of another applet and update the overall results once \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \"'s fetch is finished. Apart from adding data later, it may also be useful to remove data later. After a search is performed an item could be removed from a menu that was search in, which should result in the item no longer showing in the search either. Our system will properly update results in all these scenarios.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The search system is built around \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\"), \"s. Each \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\"), \" can return a result with a priority to specify its importance as well as a list of child searchables. It can also return a patternMatch, but we will get back to that later. It's up to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\"), \"s to determine whether a given query matches their item and it's als responsible for growing the searchable graph by providing children that can be searched. Below is the interface specifying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=ISearchable.tsx\",\n    \"title\": \"ISearchable.tsx\"\n  }, \"export type ISearchable<Q, I> = {\\n    /** The ID for this search (used to diff children) */\\n    ID: IUUID;\\n    /**\\n     * Searches for items, by possibly returning an item, and a collection of sub-searches.\\n     * May also return a matched pattern to ignore all items that don't match a pattern.\\n     * @param query The query to be checked against\\n     * @param hook A data hook to listen for changes\\n     * @param executer The executer performing the search, for possible advanced optimizations\\n     * @returns The search result\\n     **/\\n    search(\\n        query: Q,\\n        hook: IDataHook,\\n        executer?: SearchExecuter<Q, I>\\n    ): Promise<ISearchableResult<Q, I>>;\\n};\\n\\n/**\\n * The result of an invocation of a searchable\\n */\\nexport type ISearchableResult<Q, I> = {\\n    /** The item that may have been found */\\n    item?: I;\\n    /** The child items to search through */\\n    children?: ISearchable<Q, I>[];\\n    /** A pattern that this item matches, hiding all items that don't match any pattern */\\n    patternMatch?: IPatternMatch;\\n};\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SearchExecuter\"), \" is responsible for performing the search and updating results as the search is altered or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\"), \"s update their results. It takes in a single \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\"), \" instance as an input, but this searchable item can contain an entire subtree of other \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\"), \"s which can change at any point. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SearchExecuter\"), \" builds a graph of these searchable items and updates this graph when necessary, adding and removing result items in the process. The details of this search system can be found in LaunchMenu's docs: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://launchmenu.github.io/docs/concepts/interaction/search-system\"\n  }, \"launchmenu.github.io/docs/concepts/interaction/search-system\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In LaunchMenu many layers have been built on top of this core search system to make searches easier to work with without losing the flexibility of the core system. In order to make it easy to search through existing menus a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SearchAction\"), \" was created which given a list of items retrieves a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ISearchable\"), \" that represents the entire navigatable subtree of that list of items. The default implementation for this item search uses Fuzzy-rater under the hood to allow for matches that contain typos. This is an independent library that we made specifically to be used in LaunchMenu: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tarvk.github.io/fuzzy-rater/demo/build/\"\n  }, \"tarvk.github.io/fuzzy-rater/demo/build\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Fuzzy-rater is able to rate the quality of a match in linear time (in relation to the length of the word). Depending on the fuzzy-ness, creating the rater might take a relatively long time, but once it's constructed ratings can be performed very quickly. It manages to do this by making use of some NFA to DFA conversion magic. This process is described on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/TarVK/fuzzy-rater#fuzzy-matching\"\n  }, \"project's github page\"), \". We additionally added a feature that is able to identify exactly what regions matched the query text, which can then be used for highlighting results (and typos).\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Lastly the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"patternMatch\"), \" of a result is used by LaunchMenu to provide search highlighting as well as to filter out data. A searchable item can specify that it noticed that the given query matched some specific pattern (it doesn't matter what pattern), which results in other items that didn't match any pattern to be removed from the search. These pattern matches essentially add an extra filter on top of all search results. This is useful because it allows you to specify the type of data your looking for in LaunchMenu. You can for instance use the search pattern \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"note: \"), \" to remove any results from the search that aren't notes:\"), mdx(ImageGrid, {\n    images: [\"~/noSearchPattern.png\", \"~/searchPattern.png\"],\n    mdxType: \"ImageGrid\"\n  }))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Things I learned\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Things I learned\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Throughout the whole process of making different versions of LaunchMenu I've learned that I should not set my own expectation/ambitions too high in projects like these, because I've only got so much time I can invest. I've found that it's better to make a strong flexible foundation that can be build on later, instead of trying to get all features in straight away. Additionally I've learned it's essential to keep all parts of a system simple, and instead build complexity by stacking multiple layers containing such simple functionality. This keeps independent parts of the code easy to reason about compared to having a big mess that tries to achieve everything at once.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"While working on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://launchmenu.github.io/about/#adjust\"\n  }, \"Adjust\"), \" I had some really big ideas, some of which I still think are great but might not be entirely realistic. I essentially put my ambitions way too high and tried to achieve this ideal picture I had in my head, which actually in practice didn't even turn out to be all that great. Additionally I didn't separate concerns too well and ended up with a couple of large classes that were supposed to take care of almost everything in the system. I may still want to look into making libraries for some of the ideas I had for Adjust, but this project has been put on halt for now.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We're currently still working on this version of LaunchMenu, but I've already identified many different things I would like to do differently in the next version. So I will inevitably keep making mistakes with every version and learn new things. Some of these things I learn will be broad concepts as described above, and some will be more specific things such as that the UI of menu-items can be implemented in a more maintainable way. I am currently even still thinking about ways to improve all of the systems I described above, even though they were a success on the whole.\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#launchmenu\" class=\"css-nn640c\"><h1>LaunchMenu</h1></a><div><div></div><style data-emotion=\"css 1vx2pde\">.css-1vx2pde{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:space-around;-ms-flex-pack:space-around;-webkit-justify-content:space-around;justify-content:space-around;overflow:hidden;background-color:#fff;}.css-1vx2pde .gridList{-webkit-box-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-transform:translateZ(0);-moz-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0);min-width:100%;}.css-1vx2pde .tile{cursor:pointer;}@media (max-width:699.95px){.css-1vx2pde .tile{width:50%!important;}}.css-1vx2pde .title{font-size:14px;white-space:normal;}.css-1vx2pde .titleBar{background:linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.35) 80%, rgba(0,0,0,0) 100%);height:auto;padding-top:16px;padding-bottom:8px;}</style><div class=\"css-1vx2pde\"><ul class=\"MuiImageList-root gridList\" style=\"margin:-2px\"></ul></div></div><p>LaunchMenu is a quick utility applet platform inspired by Mac&#x27;s Spotlight. It is\nfully controllable from keyboard, features advanced interactive menus, and allows\nfor multiple item selection and manipulation. More information about the program\ncan be found on its dedicated website: <a href=\"https://launchmenu.github.io\" class=\"css-0\">launchmenu.github.io</a></p><p>As you might be able to tell, I used LaunchMenu&#x27;s website as a foundation for this site.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#history\" class=\"css-nn640c\"><h2>History</h2></a><p>Back in 2017 a friend of mine, Sancarn, was working on making a Spotlight-like application for custom actions. It seemed like an interesting idea and I had some tips to improve his initial concept. We ended up making a new slightly better version together. Since I was (and still am) constantly learning new things regarding software development, we ended up making multiple different versions, each one slightly better than then last. In mid 2020 we started work on the version that can currently be downloaded. A more in depth overview of LaunchMenu&#x27;s history can be found on its website: <a href=\"https://launchmenu.github.io/about/#history\" class=\"css-0\">launchmenu.github.io/about/#history</a>.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#interesting-systems\" class=\"css-nn640c\"><h2>Interesting systems</h2></a><p>In order to support all the features we planned for LaunchMenu I had to come up with several systems and architectures. Some of these systems turned out to not quite hit the mark, but below are several systems that did end up working out.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#action-system\" class=\"css-nn640c\"><h3>Action system</h3></a><div class=\"MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-align-items-xs-flex-start\"><div class=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6\"><img src=\"/pages\\1-projects\\LaunchMenu/multiselect.png\" style=\"max-width:100%;min-width:0;flex-shrink:1;flex-grow:1\"/></div><div class=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6\"><img src=\"/pages\\1-projects\\LaunchMenu/multiselectContextMenu.png\" style=\"max-width:100%;min-width:0;flex-shrink:1;flex-grow:1\"/></div></div>The action system is what allows users to select and interact with multiple items at once in LaunchMenu, primarily through the context menu. The difficulty in developing such a system is that the main search menu will show all sorts of items from unknown sources (third party applets). So the menu can&#x27;t be responsible for providing all the actions for the context menu, instead the items themselves have to do this. Of course every item could provide a list of context menu actions that the user can select to execute, but this by itself would simply result in a context menu with separate (duplicate) items that when executed only apply to one of the items in the selection. You could label actions such that you only show one context menu item but run all callback functions when it is executed, but this still wouldn&#x27;t be sufficient for all actions. Consider for example a copy action, copying multiple items in sequence will not result in all items being in the clipboard at once. So making a proper system that can handle all these cases is actually quite a challenge.<p>The resulting system that we came up with is somewhat difficult to grasp but has been thoroughly documented on LaunchMenu&#x27;s site: <a href=\"https://launchmenu.github.io/docs/concepts/interaction/actions\" class=\"css-0\">launchmenu.github.io/docs/concepts/interaction/actions</a>.\nThe idea is essentially to create <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">actions</code> which specify behavior, while making items define <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">action&nbsp;bindings</code> which associate data to these actions. An action can then be applied to a list of items (which may or may not contain bindings for that action). The actions themselves will define how to process the given bindings into a final result. Below is a very basic example showing off this concept:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=actionBindingBasics.ts\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">actionBindingBasics.ts</div><div class=\"MuiBox-root jss1\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> list </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createAction</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;list&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token function-variable\" style=\"color:#393A34\">core</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>items</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> itemsString </span><span class=\"token\" style=\"color:#393A34\">=</span><span> items</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">join</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;, &quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token control-flow\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>result</span><span class=\"token\" style=\"color:#393A34\">:</span><span> itemsString</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item1 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item1&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item2 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item2&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item3 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item3&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>item1</span><span class=\"token\" style=\"color:#393A34\">,</span><span> item2</span><span class=\"token\" style=\"color:#393A34\">,</span><span> item3</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// == &quot;item1, item2, item3&quot;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item4 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item2&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item1&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item5 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item6 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item3&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>item4</span><span class=\"token\" style=\"color:#393A34\">,</span><span> item5</span><span class=\"token\" style=\"color:#393A34\">,</span><span> item6</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// == &quot;item2, item1, item3&quot;</span></span></code></div><p>This by itself already allows us to handle some more complicated commands such as copying multiple items at once, but it&#x27;s still somewhat limiting. The main power of this system comes from the ability of defining a hierarchy in actions. One action <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code> can indicate another action <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Y</code> to be its parent in order to make bindings for that parent. Then if <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Y</code> is executed on an item with a binding for <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code>, this will be forwarded to <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Y</code>. This sounds a bit abstract, so below is a simple example building off of the previous to demonstrate this:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=actionBindingsHierarchy.ts\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">actionBindingsHierarchy.ts</div><div class=\"MuiBox-root jss2\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> subList </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createAction</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;subList&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    parents</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token function-variable\" style=\"color:#393A34\">core</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>items</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> itemsString </span><span class=\"token\" style=\"color:#393A34\">=</span><span> items</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">join</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;, &quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token control-flow\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            children</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token template-string template-punctuation\" style=\"color:#A31515\">`</span><span class=\"token template-string\" style=\"color:#A31515\">(</span><span class=\"token template-string interpolation interpolation-punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">itemsString</span><span class=\"token template-string interpolation interpolation-punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string\" style=\"color:#A31515\">)</span><span class=\"token template-string template-punctuation\" style=\"color:#A31515\">`</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item1 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item1&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item2 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>subList</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item2&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item3 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>subList</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item3&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>list</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>item1</span><span class=\"token\" style=\"color:#393A34\">,</span><span> item2</span><span class=\"token\" style=\"color:#393A34\">,</span><span> item3</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// == &quot;item1, (item2, item3)&quot;</span></span></code></div><p>We use this system in multiple ways in LaunchMenu, but most notably to define the <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">contextMenuAction</code>. This action is what menus use to retrieve all the items to show in the context menu for a given selection. So each <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">action</code> that is defined can simply indicate <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">contextMenuAction</code> to be their parent and create a binding (specifying a menu item) that should show in the context menu. So a simplified mockup of this system may look as follows:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=contextMenuAction.tsx\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">contextMenuAction.tsx</div><div class=\"MuiBox-root jss3\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> contextMenuAction </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createAction</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;contextMenu&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token function-variable\" style=\"color:#393A34\">core</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">items</span><span class=\"token parameter\" style=\"color:#393A34\">:</span><span class=\"token parameter\"> </span><span class=\"token parameter\" style=\"color:#36acaa\">JSX</span><span class=\"token parameter\" style=\"color:#393A34\">.</span><span class=\"token parameter property-access maybe-class-name\">Element</span><span class=\"token parameter\" style=\"color:#393A34\">[</span><span class=\"token parameter\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span>items\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> copyAction </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createAction</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;copy&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    parents</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>contextMenuAction</span><span class=\"token\" style=\"color:#393A34\">]</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token function-variable\" style=\"color:#393A34\">core</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">text</span><span class=\"token parameter\" style=\"color:#393A34\">:</span><span class=\"token parameter\"> string</span><span class=\"token parameter\" style=\"color:#393A34\">[</span><span class=\"token parameter\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> combinedText </span><span class=\"token\" style=\"color:#393A34\">=</span><span> text</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">join</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;\\n&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token control-flow\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span> children</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>contextMenuAction</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">MenuItem</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">onClick</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#393A34\">(</span><span class=\"token script language-javascript\" style=\"color:#393A34\">)</span><span class=\"token script language-javascript arrow\" style=\"color:#800000\">=&gt;</span><span class=\"token script language-javascript\" style=\"color:#393A34\">copy</span><span class=\"token script language-javascript\" style=\"color:#393A34\">(</span><span class=\"token script language-javascript\" style=\"color:#800000\">combinedText</span><span class=\"token script language-javascript\" style=\"color:#393A34\">)</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">Copy</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#2B91AF\">MenuItem</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item1 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>copyAction</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item1&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> item2 </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>actionBindings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>copyAction</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">createBinding</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;item2&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> menu </span><span class=\"token\" style=\"color:#393A34\">=</span><span> contextMenuAction</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>item1</span><span class=\"token\" style=\"color:#393A34\">,</span><span> item2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Will result in a list with 1 JSX element</span></span></code></div><p>So this system is what allows LaunchMenu to have very powerful yet flexible context menus. Any third party applet is able to create &#x27;child actions&#x27; for the `contextMenuAction`` and thus extend what can be shown in the context menu. I have seen other context menu systems use approaches based on string labels in the past, and this results in implicit dependencies that make the code very hard to navigate. This system however has explicit dependencies in the code making things easy to trace, and even provides great intellisense/type-safety.</p><p>I am planning on releasing an implementation of this system as an independent package at some point, but I am currently still trying to figure out some improvements. That project can be found at <a href=\"https://github.com/TarVK/Hiery\" class=\"css-0\">github.com/TarVK/Hiery</a></p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#subscribable-state\" class=\"css-nn640c\"><h3>Subscribable state</h3></a><p>Throughout all of LaunchMenu we&#x27;ve made use of my library <a href=\"https://tarvk.github.io/model-react/examples/build/\" class=\"css-0\">Model-react</a>. This library wasn&#x27;t made specifically for LaunchMenu, but LaunchMenu wouldn&#x27;t function without it. This is what allows us to keep LaunchMenu very flexible, yet keep the entire state and UI synchronized.</p><p>At some point I will link to an independent page on Model-react, but I have not yet created said page.</p><p>The main idea behind model-react is to make it as easy as possible to listen to changes of a value. It&#x27;s in essence a form of dependency inversion. If I have some property <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">prop</code> which I use in multiple places of my application - let&#x27;s say place <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code> and <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Y</code>, I would prefer to not have to also explicitly call <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code> and <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Y</code> when updating <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">prop</code>. Because Within code, that approach would result in cyclic dependencies and maintenance nightmares since <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code> and <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Y</code> depend on <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">prop</code>, but <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">prop</code> depends on <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code> and <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Y</code> because it would have to call some code there to forward the changes. Moreover that approach would not allow third party applets to be informed of state changes at all.\nA common pattern to deal with this is the <a href=\"https://en.wikipedia.org/wiki/Observer_pattern#:~:text=The%20observer%20pattern%20is%20a,calling%20one%20of%20their%20methods.\" class=\"css-0\"><style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Observer</code> design pattern</a>:</p><p><img alt=\"Observer\" src=\"/pages\\1-projects\\LaunchMenu/observer.svg\" style=\"max-width:100%\"/></p><p>The problem with this design pattern is that it requires a lot of verbose and boilerplate-like code to register and deregister observers. Model-react changes this by essentially making you pass a &quot;hook&quot; when calling a getter for your data, which encapsulates all that is of importance to subscribe to the data. &quot;Data sources&quot; such as a simple <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Field</code> can then be used to create a source of data that can deal with these hooks. There are also a couple of different ways of creating hooks, most notably using the <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">Observer</code> class that transforms this whole system back to a simple callback when the property changes and <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">useDataHook</code> which allows react components to rerender when data changes.</p><p>Below is a simple example/demo which highlights how Model-react hides almost all of the boilerplate that usually comes with using the Observer design pattern.</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=modelReact.tsx\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">modelReact.tsx</div><div class=\"MuiBox-root jss4\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token module\" style=\"color:#0000ff\">import</span><span> </span><span class=\"token imports\" style=\"color:#393A34\">{</span><span class=\"token imports maybe-class-name\">Field</span><span class=\"token imports\" style=\"color:#393A34\">,</span><span class=\"token imports\"> useDataHook</span><span class=\"token imports\" style=\"color:#393A34\">,</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">IDataHook</span><span class=\"token imports\" style=\"color:#393A34\">}</span><span> </span><span class=\"token module\" style=\"color:#0000ff\">from</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;model-react&quot;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token module\" style=\"color:#0000ff\">import</span><span> </span><span class=\"token maybe-class-name\">React</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#36acaa\">FC</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token module\" style=\"color:#0000ff\">from</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;react&quot;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Person</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> name </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Field</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> age </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Field</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">name</span><span class=\"token parameter\" style=\"color:#393A34\">:</span><span class=\"token parameter\"> string</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> age</span><span class=\"token parameter\" style=\"color:#393A34\">:</span><span class=\"token parameter\"> number</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">name</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span>name</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">age</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span>age</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">setName</span><span class=\"token\" style=\"color:#393A34\">(</span><span>name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">name</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span>name</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getName</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token control-flow\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">name</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">setAge</span><span class=\"token\" style=\"color:#393A34\">(</span><span>age</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">age</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span>age</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getAge</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token control-flow\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">age</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token maybe-class-name\">PersonEditor</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">FC</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#393A34\">{</span><span>person</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">Person</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">person</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>h</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">useDataHook</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token control-flow\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">            </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">input</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                </span><span class=\"token\" style=\"color:#ff0000\">value</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">person</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript method property-access\" style=\"color:#800000\">getName</span><span class=\"token script language-javascript\" style=\"color:#393A34\">(</span><span class=\"token script language-javascript\" style=\"color:#800000\">h</span><span class=\"token script language-javascript\" style=\"color:#393A34\">)</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                </span><span class=\"token\" style=\"color:#ff0000\">onChange</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript parameter\" style=\"color:#800000\">e</span><span class=\"token script language-javascript\" style=\"color:#800000\"> </span><span class=\"token script language-javascript arrow\" style=\"color:#800000\">=&gt;</span><span class=\"token script language-javascript\" style=\"color:#800000\"> person</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript method property-access\" style=\"color:#800000\">setName</span><span class=\"token script language-javascript\" style=\"color:#393A34\">(</span><span class=\"token script language-javascript\" style=\"color:#800000\">e</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript property-access\" style=\"color:#800000\">target</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript property-access\" style=\"color:#800000\">value</span><span class=\"token script language-javascript\" style=\"color:#393A34\">)</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">            </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">            </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">input</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                </span><span class=\"token\" style=\"color:#ff0000\">type</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">number</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                </span><span class=\"token\" style=\"color:#ff0000\">value</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">person</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript method property-access\" style=\"color:#800000\">getAge</span><span class=\"token script language-javascript\" style=\"color:#393A34\">(</span><span class=\"token script language-javascript\" style=\"color:#800000\">h</span><span class=\"token script language-javascript\" style=\"color:#393A34\">)</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                </span><span class=\"token\" style=\"color:#ff0000\">onChange</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript parameter\" style=\"color:#800000\">e</span><span class=\"token script language-javascript\" style=\"color:#800000\"> </span><span class=\"token script language-javascript arrow\" style=\"color:#800000\">=&gt;</span><span class=\"token script language-javascript\" style=\"color:#800000\"> person</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript method property-access\" style=\"color:#800000\">setAge</span><span class=\"token script language-javascript\" style=\"color:#393A34\">(</span><span class=\"token script language-javascript known-class-name\" style=\"color:#800000\">Number</span><span class=\"token script language-javascript\" style=\"color:#393A34\">(</span><span class=\"token script language-javascript\" style=\"color:#800000\">e</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript property-access\" style=\"color:#800000\">target</span><span class=\"token script language-javascript\" style=\"color:#393A34\">.</span><span class=\"token script language-javascript property-access\" style=\"color:#800000\">value</span><span class=\"token script language-javascript\" style=\"color:#393A34\">)</span><span class=\"token script language-javascript\" style=\"color:#393A34\">)</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">            </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">        </span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token maybe-class-name\">PersonProfile</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">FC</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#393A34\">{</span><span>person</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">Person</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">person</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>h</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">useDataHook</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token control-flow\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">            Name: </span><span class=\"token\" style=\"color:#393A34\">{</span><span>person</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getName</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token plain-text\"> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">br</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">            Age: </span><span class=\"token\" style=\"color:#393A34\">{</span><span>person</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getAge</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">        </span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> john </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Person</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;John&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token module\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token module\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">PersonEditor</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">person</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">john</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">PersonProfile</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">person</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">john</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">    </span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><div><div><input value=\"John\"/><input type=\"number\" value=\"1\"/></div><div>Name: <!-- -->John<!-- --> <br/>Age: <!-- -->1</div></div><p>Model-react also has some other note-worthy benefits compared to the direct Observer pattern:</p><ul><li>Everything concerning subscripting to data can be ignored if you only need it once</li><li>Hooks can collect errors in data sources in order to not disrupt the normal flow</li><li>Data sources can indicate to hook that data is still processed which is useful for loading indicators</li><li>It&#x27;s easier to not group updates of independent data together which results in fewer redundant updates</li></ul></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#fuzzy-search\" class=\"css-nn640c\"><h3>Fuzzy search</h3></a><p><img alt=\"Fuzzy search\" src=\"/pages\\1-projects\\LaunchMenu/banner.png\" style=\"max-width:100%\"/></p><p>We&#x27;ve created a custom search system for LaunchMenu. This system is based on the idea that searches are often recursive, especially in LaunchMenu. This is because menus can have many layers of nested sub-menus. We wanted this system to make use of the subscribable data such that search results can dynamically update. This is for instance useful when an applet <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code> has to fetch data for its results, as it allows us to already show results of another applet and update the overall results once <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">X</code>&#x27;s fetch is finished. Apart from adding data later, it may also be useful to remove data later. After a search is performed an item could be removed from a menu that was search in, which should result in the item no longer showing in the search either. Our system will properly update results in all these scenarios.</p><p>The search system is built around <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code>s. Each <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code> can return a result with a priority to specify its importance as well as a list of child searchables. It can also return a patternMatch, but we will get back to that later. It&#x27;s up to <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code>s to determine whether a given query matches their item and it&#x27;s als responsible for growing the searchable graph by providing children that can be searched. Below is the interface specifying <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code></p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=ISearchable.tsx\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">ISearchable.tsx</div><div class=\"MuiBox-root jss5\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token module\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ISearchable</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">Q</span><span class=\"token\" style=\"color:#393A34\">,</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token\" style=\"color:#36acaa\">I</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** The ID for this search (used to diff children) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">ID</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">IUUID</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Searches for items, by possibly returning an item, and a collection of sub-searches.\n</span><span style=\"flex-wrap:wrap\">     * May also return a matched pattern to ignore all items that don&#x27;t match a pattern.\n</span><span style=\"flex-wrap:wrap\">     * @param query The query to be checked against\n</span><span style=\"flex-wrap:wrap\">     * @param hook A data hook to listen for changes\n</span><span style=\"flex-wrap:wrap\">     * @param executer The executer performing the search, for possible advanced optimizations\n</span><span style=\"flex-wrap:wrap\">     * @returns The search result\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     **/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">search</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        query</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">Q</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        hook</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        executer</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">SearchExecuter</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">Q</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#36acaa\">I</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">ISearchableResult</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">Q</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#36acaa\">I</span><span class=\"token\" style=\"color:#393A34\">&gt;&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\"> * The result of an invocation of a searchable\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\"> */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token module\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ISearchableResult</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">Q</span><span class=\"token\" style=\"color:#393A34\">,</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token\" style=\"color:#36acaa\">I</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** The item that may have been found */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    item</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">I</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** The child items to search through */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    children</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ISearchable</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">Q</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#36acaa\">I</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** A pattern that this item matches, hiding all items that don&#x27;t match any pattern */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    patternMatch</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IPatternMatch</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>The <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">SearchExecuter</code> is responsible for performing the search and updating results as the search is altered or <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code>s update their results. It takes in a single <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code> instance as an input, but this searchable item can contain an entire subtree of other <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code>s which can change at any point. The <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">SearchExecuter</code> builds a graph of these searchable items and updates this graph when necessary, adding and removing result items in the process. The details of this search system can be found in LaunchMenu&#x27;s docs: <a href=\"https://launchmenu.github.io/docs/concepts/interaction/search-system\" class=\"css-0\">launchmenu.github.io/docs/concepts/interaction/search-system</a>.</p><p>In LaunchMenu many layers have been built on top of this core search system to make searches easier to work with without losing the flexibility of the core system. In order to make it easy to search through existing menus a <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">SearchAction</code> was created which given a list of items retrieves a <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">ISearchable</code> that represents the entire navigatable subtree of that list of items. The default implementation for this item search uses Fuzzy-rater under the hood to allow for matches that contain typos. This is an independent library that we made specifically to be used in LaunchMenu: <a href=\"https://tarvk.github.io/fuzzy-rater/demo/build/\" class=\"css-0\">tarvk.github.io/fuzzy-rater/demo/build</a>.</p><p>Fuzzy-rater is able to rate the quality of a match in linear time (in relation to the length of the word). Depending on the fuzzy-ness, creating the rater might take a relatively long time, but once it&#x27;s constructed ratings can be performed very quickly. It manages to do this by making use of some NFA to DFA conversion magic. This process is described on the <a href=\"https://github.com/TarVK/fuzzy-rater#fuzzy-matching\" class=\"css-0\">project&#x27;s github page</a>. We additionally added a feature that is able to identify exactly what regions matched the query text, which can then be used for highlighting results (and typos).</p><p>Lastly the <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">patternMatch</code> of a result is used by LaunchMenu to provide search highlighting as well as to filter out data. A searchable item can specify that it noticed that the given query matched some specific pattern (it doesn&#x27;t matter what pattern), which results in other items that didn&#x27;t match any pattern to be removed from the search. These pattern matches essentially add an extra filter on top of all search results. This is useful because it allows you to specify the type of data your looking for in LaunchMenu. You can for instance use the search pattern <style data-emotion=\"css 1ofz18t\">.css-1ofz18t{display:inline-block;background-color:#f6f6f6;border-radius:5px;word-break:break-word;}</style><code class=\"css-1ofz18t\">note:&nbsp;</code> to remove any results from the search that aren&#x27;t notes:</p><div class=\"MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-align-items-xs-flex-start\"><div class=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6\"><img src=\"/pages\\1-projects\\LaunchMenu/noSearchPattern.png\" style=\"max-width:100%;min-width:0;flex-shrink:1;flex-grow:1\"/></div><div class=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6\"><img src=\"/pages\\1-projects\\LaunchMenu/searchPattern.png\" style=\"max-width:100%;min-width:0;flex-shrink:1;flex-grow:1\"/></div></div></section></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#things-i-learned\" class=\"css-nn640c\"><h2>Things I learned</h2></a><p>Throughout the whole process of making different versions of LaunchMenu I&#x27;ve learned that I should not set my own expectation/ambitions too high in projects like these, because I&#x27;ve only got so much time I can invest. I&#x27;ve found that it&#x27;s better to make a strong flexible foundation that can be build on later, instead of trying to get all features in straight away. Additionally I&#x27;ve learned it&#x27;s essential to keep all parts of a system simple, and instead build complexity by stacking multiple layers containing such simple functionality. This keeps independent parts of the code easy to reason about compared to having a big mess that tries to achieve everything at once.</p><p>While working on <a href=\"https://launchmenu.github.io/about/#adjust\" class=\"css-0\">Adjust</a> I had some really big ideas, some of which I still think are great but might not be entirely realistic. I essentially put my ambitions way too high and tried to achieve this ideal picture I had in my head, which actually in practice didn&#x27;t even turn out to be all that great. Additionally I didn&#x27;t separate concerns too well and ended up with a couple of large classes that were supposed to take care of almost everything in the system. I may still want to look into making libraries for some of the ideas I had for Adjust, but this project has been put on halt for now.</p><p>We&#x27;re currently still working on this version of LaunchMenu, but I&#x27;ve already identified many different things I would like to do differently in the next version. So I will inevitably keep making mistakes with every version and learn new things. Some of these things I learn will be broad concepts as described above, and some will be more specific things such as that the UI of menu-items can be implemented in a more maintainable way. I am currently even still thinking about ways to improve all of the systems I described above, even though they were a success on the whole.</p></section></section>","scope":{}},"urlBase":"/pages\\1-projects\\LaunchMenu","ToC":[{"name":"LaunchMenu","children":[{"name":"History","children":[]},{"name":"Interesting systems","children":[{"name":"Action system","children":[]},{"name":"Subscribable state","children":[]},{"name":"Fuzzy search","children":[]}]},{"name":"Things I learned","children":[]}]}],"shareData":{"title":"LaunchMenu","description":"LaunchMenu is the largest project I&#x27;ve worked on so far, and has a couple of interesting features I am very proud of.","tags":["launch","menu"]},"index":{"rootPath":"","items":[{"name":"projects","orderIndex":1,"opened":true,"hasIndex":false,"children":[{"name":"LaunchMenu","opened":false,"hasIndex":true,"children":[],"selected":true},{"name":"SAT","opened":false,"hasIndex":true,"children":[]},{"name":"Sweeper","opened":false,"hasIndex":true,"children":[]},{"name":"Hidden-blade","orderIndex":100,"opened":false,"hasIndex":true,"children":[]}]},{"name":"articles","orderIndex":2,"opened":false,"hasIndex":false,"children":[{"name":"Lambda-calculus","opened":false,"hasIndex":true,"children":[]}]},{"name":"hobbies","orderIndex":3,"opened":false,"hasIndex":false,"children":[{"name":"3D-modelling","opened":false,"hasIndex":true,"children":[]},{"name":"juggling","opened":false,"hasIndex":true,"children":[]},{"name":"parkour","opened":false,"hasIndex":true,"children":[]}]}]}},"__N_SSG":true}